<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"	
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
">
	
	<context:component-scan base-package="com.xiaoke1256.orders">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
	
	<context:component-scan base-package="com.xiaoke1256.jvmtest">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
	
	<bean id="conversionService"
		class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<!-- <bean class="com.wondersgroup.esf.base.StringToDate" /> -->
			</list>
		</property>
	</bean>
	
	<mvc:annotation-driven conversion-service="conversionService" />
	<!-- 拦截器必须放在spring.xml中配置 -->
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/styles/**" location="/styles/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	
	<!-- default-servlet-handler 是为了让web.xml中配置spring拦截请求/×时候可以过滤资源文件，如果spring配置了*.do类似的，则这个不需要添加  -->
	<mvc:default-servlet-handler/>
	
	
<!-- 	<mvc:interceptors>
		<bean class="com.wondersgroup.esf.security.controller.AppAuditInterceptor">
		</bean>
	</mvc:interceptors> -->
	<!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!-- 设置为true以忽略对Accept Header的支持 ，即不自动检测头文件类型-->		
		<property name="ignoreAcceptHeader" value="true"/>
		<property name="order" value="1" />
		 <property name="mediaTypes">
            <map>
                <entry key="json" value="application/json" />
                <entry key="xml" value="application/xml" />
            </map>
        </property>		
		<property name="defaultViews">
            <list>
                <!-- for application/json -->
                <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
                <!-- for xml use JAXB -->
                <!-- 
                 <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                     <property name="marshaller">  
                          <bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">  
                               <property name="classesToBeBound">  
                                    <list>  
                                         
                                    </list>  
                               </property>  
                          </bean>  
                     </property>  
                </bean>  
                -->
                <!-- for xml use XStream -->
                <!-- 
                <bean id="xmlView"  class="org.springframework.web.servlet.view.xml.MarshallingView">  
			        <constructor-arg>  
			            <bean class="org.springframework.oxm.xstream.XStreamMarshaller">  
			                <property name="autodetectAnnotations" value="true"/>  
			            </bean>  
			        </constructor-arg>  
			    </bean> 
			     --> 
            </list>
        </property>
		
	</bean>
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="2" />
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"></property>
    </bean>
	
	
	<bean id="multipartResolver"  
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver"  
          p:defaultEncoding="utf-8" /> 

	<!-- <aop:config>
		<aop:pointcut id="pc"
			expression="execution(* com.wondersgroup..service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pc" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="start*" propagation="REQUIRED" />
			<tx:method name="complete*" propagation="REQUIRED" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="search*" read-only="true" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
    <tx:annotation-driven transaction-manager="transactionManager"/> -->
    
<!--     <import resource="../ext/spring-servlet*.xml"/> -->

</beans>

